apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation "junit:junit:$versions.junit"
    //rxandroid  链接 https://github.com/ReactiveX/RxAndroid/
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    api 'io.reactivex.rxjava2:rxjava:2.1.9'
    //Gson 库 Gson  用法解析 https://github.com/google/gson/blob/master/UserGuide.md
    api 'com.google.code.gson:gson:2.8.5'

    //ok http 网络请求 https://github.com/square/okhttp/tree/master
    api 'com.squareup.okhttp3:okhttp:3.11.0'
    //ok http 日志拦截器 https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor
    api 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    //解决 retrofit 报错无法下载问题：解决步骤
//    1.新建一个新的项目，编译下载，
//    2.rebuild当前项目，错误解决

    //retrofit 链接 http://square.github.io/retrofit/
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    //Gson解析支持
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    //RX JAva解析支持 https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2
    api 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

// If you want to bind to Android-specific lifecycles
    api 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'

// If you want pre-written Activities and Fragments you can subclass as providers
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'

// If you want pre-written support preference Fragments you can subclass as providers
    api 'com.trello.rxlifecycle2:rxlifecycle-components-preference:2.2.1'

// If you want to use Android Lifecycle for providers
    api 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.1'


    api project(':base')

    implementation project(':dialogandpop')

}
